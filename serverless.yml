service: meeting-scheduler


#npm run deploy --param="apiToken=23a49ed5b3a0008b942de37b8b9bd8c00f57c436ebb8b6f6c787492ad3712d84"
frameworkVersion: '3'

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dotenv-plugin  # Add this plugin


provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    API_TOKEN: ${param:apiToken, '23a49ed5b3a0008b942de37b8b9bd8c00f57c436ebb8b6f6c787492ad3712d84'} # node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/MeetingDetails
       
functions:
  
  authorizer:
    handler: src/functions/authorizer.handler
    environment:
      API_TOKEN: ${self:provider.environment.API_TOKEN}

  registerMeeting:
    handler: src/functions/handler.registerMeeting
    events:
      - http:
          path: schedule-meeting
          method: post
          cors: true
          authorizer:
            name: authorizer
            type: token
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 300


resources:
  Resources:
    MeetingTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: MeetingDetails
        AttributeDefinitions:
          - AttributeName: "meetingId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "meetingId"
            KeyType: "HASH"

        BillingMode: PAY_PER_REQUEST 

